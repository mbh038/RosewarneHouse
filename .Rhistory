start = list(R1=1.71,R2=1.,Tm_init=15.4,C=1364000,sigma=1),
fixed=list(mu=0),
nobs = length(Q),
lower = c(1, 0.1,10,1000000,0),
upper = c(3,3,20,2000000,5),
method= "L-BFGS-B"
)
summary(fit)
1/2.6
fit$coefficients
fit
fit$Coefficients
fit$Coefficients[1]
mypar(1,1)
R1=1.847
R2=0.804
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qexp<-Qexp[-1]
plot(Q,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))))
lines(Qexp,col="blue")
str(fit)
fit$coef
coef(fit)
coef(fit)[1]
opresidual=(Q-Qexp[-1])^2
sum(residual)
opresidual=(Q-Qexp[-1])^2
sum(opresidual)
1/0.804
plot(Q,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)")
lines(Qexp,col="blue")
fullcoef(fit)
(1.44e-3)^0.5
vcoef(fit)
coef(fit)
summary(fit)
plot(Q,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
lines(Qexp,col="blue")
plot(Qexp,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)",col="red")
lines(Q,col="blue")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
u4<-read.csv("22-04-to-29-04 unit4 final.prn",sep="\t",stringsAsFactors=FALSE)
names(u4)<-c("date","time","T1","T2","T3","T4","hp1","hp2")
library(rafalib)
mypar(2,1)
plot(u4$T1,type="l")
lines(u4$T2,col=2)
#lines(u4$T3,col=3)
lines(u4$T4,col=4)
plot(u4$T1,type="l")
lines(u4$T2,col=2)
plot(u4$T1-u4$T4,type="l",ylim=c(-3,3))
lines(u4$T2-u4$T4,col="blue")
plot(u4$T1-u4$T4,type="l")
lines(u4$T2-u4$T4,col="blue")
# amplifier functions
ampch1<-function(vout){
0.012 * vout - 0.094 #cal 5-02-16 alice & mike
}
ampch2<-function(vout){
0.0118 * vout - 0.5235 #cal 5-02-16 alice & mike
}
plot(u4$T1[index]-u4$T4[index],type="l")
lines(u4$T2[index]-u4$T4[index],col="blue")
plot(u4$hp1flux1,type="l")
lines(u4$hp2flux2,col="blue")
plot(u4$T1[index]-u4$T4[index],type="l")
lines(u4$T2[index]-u4$T4[index],col="blue")
index=2000:10000
plot(u4$T1[index]-u4$T4[index],type="l")
lines(u4$T2[index]-u4$T4[index],col="blue")
plot(u4$hp1flux1,type="l")
lines(u4$hp2flux2,col="blue")
u4$hp1preamp1<-ampch1(u4$hp1)
u4$hp1flux1<-u4$hp1preamp1/0.06
u4$hp2preamp2<-ampch2(u4$hp2)
u4$hp2flux2<-u4$hp2preamp2/0.06
plot(u4$hp1flux1,type="l")
lines(u4$hp2flux2,col="blue")
plot(u4$hp1flux1,type="l")
plot(u4$hp2flux2,type="l",col="blue")
plot(u4$id[index],u4$hp1flux1[index],type="l",ylim=c(-10,10))
plot(u4$id[index],u4$hp2flux2[index],col="blue",type="l",ylim=c(0,20))
plot(u4$id[index],u4$hp1flux1[index],type="l",ylim=c(-10,10))
Qexp<-u4$hp2flux2[index]
Tint<-u4$T1[index]
Text<-u4$T4[index]
t=u4$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=1.847
R2=0.804
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qexp<-Qexp[-1]
length(Qexp)
length(Tint)
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qexp<-u4$hp2flux2[index]
Tint<-u4$T1[index]
Text<-u4$T4[index]
t=u4$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=1.847
R2=0.804
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
summary(t)
str(u4)
u4<-read.csv("22-04-to-29-04 unit4 final.prn",sep="\t",stringsAsFactors=FALSE)
id<-seq(1,nrow(u4))
u4<-cbind(id,u4)
names(u4)<-c("id","date","time","T1","T2","T3","T4","hp1","hp2")
library(rafalib)
mypar(2,1)
plot(u4$T1,type="l") # inside
lines(u4$T2,col=2) # inside
#lines(u4$T3,col=3)
lines(u4$T4,col=4) # outside
plot(u4$T1-u4$T4,type="l")
lines(u4$T2-u4$T4,col="blue")
#index=u4$T2-u4$T4>-1 & u4$T2-u4$T4<0
# amplifier functions
ampch1<-function(vout){
0.012 * vout - 0.094 #cal 5-02-16 alice & mike
}
ampch2<-function(vout){
0.0118 * vout - 0.5235 #cal 5-02-16 alice & mike
}
# heat plate plots
u4$hp1preamp1<-ampch1(u4$hp1)
u4$hp1flux1<-u4$hp1preamp1/0.06
u4$hp2preamp2<-ampch2(u4$hp2)
u4$hp2flux2<-u4$hp2preamp2/0.06
index=2000:10000
plot(u4$T1[index]-u4$T4[index],type="l")
lines(u4$T2[index]-u4$T4[index],col="blue")
plot(u4$hp1flux1,type="l")
plot(u4$hp2flux2,type="l",col="blue")
plot(u4$id[index],u4$hp1flux1[index],type="l",ylim=c(-10,10))
plot(u4$id[index],u4$hp2flux2[index],col="blue",type="l",ylim=c(0,20))
Qexp<-u4$hp2flux2[index]
Tint<-u4$T1[index]
Text<-u4$T4[index]
t=u4$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=1.847
R2=0.804
C=1364000
Tm_init=15.08
tau=60
mypar(1,1)
R1=2.9 # celotex
R2=0.804 # as per unit 1, stone wall
C=1364000
Tm_init=15.08
tau=60
summary(t)
Q<-Qt(R1,R2,Tm_init,C)
mypar(1,1)
R1=2.9 # celotex
R2=0.804 # as per unit 1, stone wall
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
rm(list=ls())
R1=1
R2=0.804 # as for unit 1
C=1.364e6 # as for unit 1
TMinit=15.1
u4<-read.csv("22-04-to-29-04 unit4 final.prn",sep="\t",stringsAsFactors=FALSE)
id<-seq(1,nrow(u4))
u4<-cbind(id,u4)
names(u4)<-c("id","date","time","T1","T2","T3","T4","hp1","hp2")
library(rafalib)
mypar(2,1)
plot(u4$T1,type="l") # inside
lines(u4$T2,col=2) # inside
#lines(u4$T3,col=3)
lines(u4$T4,col=4) # outside
plot(u4$T1-u4$T4,type="l")
lines(u4$T2-u4$T4,col="blue")
#index=u4$T2-u4$T4>-1 & u4$T2-u4$T4<0
# amplifier functions
ampch1<-function(vout){
0.012 * vout - 0.094 #cal 5-02-16 alice & mike
}
ampch2<-function(vout){
0.0118 * vout - 0.5235 #cal 5-02-16 alice & mike
}
# heat plate plots
u4$hp1preamp1<-ampch1(u4$hp1)
u4$hp1flux1<-u4$hp1preamp1/0.06
u4$hp2preamp2<-ampch2(u4$hp2)
u4$hp2flux2<-u4$hp2preamp2/0.06
index=2000:10000
plot(u4$T1[index]-u4$T4[index],type="l")
lines(u4$T2[index]-u4$T4[index],col="blue")
plot(u4$hp1flux1,type="l")
plot(u4$hp2flux2,type="l",col="blue")
plot(u4$id[index],u4$hp1flux1[index],type="l",ylim=c(-10,10))
plot(u4$id[index],u4$hp2flux2[index],col="blue",type="l",ylim=c(0,20))
Qexp<-u4$hp2flux2[index]
Tint<-u4$T1[index]
Text<-u4$T4[index]
t=u4$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=2.9 # celotex
R2=0.804 # as per unit 1, stone wall
C=1364000
Tm_init=15.08
tau=60
lengtth(Tint)
length(Tint)
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(sum(index)-1)){
if (i %/% 1000 ==0){
print (i)
}
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
sum(index)
summary(index)
head9t
head(t)
t[1]
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:length(t)){
if (i %/% 1000 ==0){
print (i)
}
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qexp<-Qexp[-1]
plot(Qexp,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)",col="red")
lines(Q,col="blue")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
diff<-Q-Qexp
length(Q)
length(Qexp)
Qexp<-u4$hp2flux2[index]
Tint<-u4$T1[index]
Text<-u4$T4[index]
t=u4$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=2.9 # celotex
R2=0.804 # as per unit 1, stone wall
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:length(t)){
if (i %/% 1000 ==0){
print (i)
}
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qexp<-Qexp[-1]
plot(Qexp,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)",col="red")
lines(Q,col="blue")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
diff=Q-Qexp
Qexp<-u4$hp2flux2[index]
Tint<-u4$T1[index]
Text<-u4$T4[index]
t=u4$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=2.9 # celotex
R2=0.804 # as per unit 1, stone wall
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:length(t)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
#Qexp<-Qexp[-1]
plot(Qexp,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)",col="red")
lines(Q,col="blue")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
diff=Q-Qexp
summary(diff)
Qexp<-Qexp+mean(Q-Qexp)
plot(Qexp,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)",col="red")
lines(Q,col="blue")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
LL <- function(R1,R2,Tm_init,C, mu, sigma) {
R = Qexp-Qt(R1,R2,Tm_init,C)
#
R = suppressWarnings(dnorm(R, mu, sigma, log = TRUE))
#
-sum(R)
}
library(stats4)
fit<-mle(LL,
start = list(R1=2.9,R2=0.804,Tm_init=15.4,C=1364000,sigma=1),
fixed=list(mu=0),
nobs = length(Q),
lower = c(1, 0,10,1000000,0),
upper = c(3,3,20,2000000,5),
method= "L-BFGS-B"
)
fit<-mle(LL,
start = list(R1=2.9,R2=0.804,Tm_init=15.4,C=1364000,sigma=1),
fixed=list(mu=0),
nobs = length(Q),
lower = c(2, .5,14,1000000,0.1),
upper = c(4,1.5,17,2000000,5),
method= "L-BFGS-B"
)
summary(fit)
Q<-Qt(coef(fit)[1],coef(fit)[2],coef(fit)[3],coef(fit)[4])
lines(Q,col="green")
R1=1
R2=1
C=200000
TMinit=12
u1<-read.csv("18-03-to-15-04 unit1.prn",sep="\t",stringsAsFactors=FALSE)
id<-seq(1,nrow(u1))
u1<-cbind(id,u1)
names(u1)<-c("id","date","time","T1","T2","T3","T4","hp1","hp2")
library(rafalib)
mypar(2,1)
plot(u1$T2,type="l") # outside
lines(u1$T4,col=2) # outside
lines(u1$T1,col=3) # inside
lines(u1$T3,col=4) # inside
plot(u1$T1-u1$T3,type="l",ylim=c(-3,3))
lines(u1$T2-u1$T4,col="blue")
#index=u1$T2-u1$T4>-1 & u1$T2-u1$T4<0
# amplifier functions
ampch1<-function(vout){
0.012 * vout - 0.094 #cal 5-02-16 alice & mike
}
ampch2<-function(vout){
0.0118 * vout - 0.5235 #cal 5-02-16 alice & mike
}
# heat plate plots
u1$hp1preamp1<-ampch1(u1$hp1)
u1$hp1flux1<-u1$hp1preamp1/0.06
u1$hp2preamp2<-ampch2(u1$hp2)
u1$hp2flux2<-u1$hp2preamp2/0.06
index=u1$hp1flux1<10
index=index & u1$hp1flux1>-7
index = index & u1$hp2flux2<30
index = index & u1$hp2flux2>0
plot(u1$T1[index]-u1$T2[index],type="l",ylim=c(-3,3))
lines(u1$T3[index]-u1$T4[index],col="blue")
plot(u1$hp1flux1,type="l")
lines(u1$hp2flux2,col="blue")
plot(u1$id[index],u1$hp1flux1[index],type="l",ylim=c(-10,10))
plot(u1$id[index],u1$hp2flux2[index],col="blue",type="l",ylim=c(0,20))
Qexp<-u1$hp2flux2[index]
Tint<-u1$T3[index]
Text<-u1$T4[index]
t=u1$id[index]
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=1.847
R2=0.804
C=1364000
Tm_init=15.08
tau=60
length(t)
length(index)
Tm=numeric()
Q=numeric()
mypar(1,1)
R1=1.847
R2=0.804
C=1364000
Tm_init=15.08
tau=60
Qt<-function(R1,R2,Tm_init,C){
Tm[1]=Tm_init
for (i in 1:(length(t)-1)){
dt=60*(t[i+1]-t[i])
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/dt)/(1/R1 + 1/R2 + C/dt)
}
Q
}
Q<-Qt(R1,R2,Tm_init,C)
Qexp<-Qexp[-1]
plot(Qexp,type="l",ylim=c(min(min(Q),min(Qexp)),max(max(Q),max(Qexp))),xlab="Time (min)",ylab="Heat flux Q (W/m^2)",col="red")
lines(Q,col="blue")
legend("topright", c("Measured", "Predicted"), pch="o", col=c("red", "blue"))
LL <- function(R1,R2,Tm_init,C, mu, sigma) {
R = Qexp-Qt(R1,R2,Tm_init,C)
#
R = suppressWarnings(dnorm(R, mu, sigma, log = TRUE))
#
-sum(R)
}
library(stats4)
fit<-mle(LL,
start = list(R1=1.71,R2=1.,Tm_init=15.4,C=1364000,sigma=1),
fixed=list(mu=0),
nobs = length(Q),
lower = c(1, 0,10,1000000,0),
upper = c(3,3,20,2000000,5),
method= "L-BFGS-B"
)
library(stats4)
fit<-mle(LL,
start = list(R1=1.71,R2=1.,Tm_init=15.4,C=1364000,sigma=1),
fixed=list(mu=0),
nobs = length(Q),
lower = c(1.5, 0.6,14,1200000,.1),
upper = c(2.5,1,17,1600000,5),
method= "L-BFGS-B"
)
