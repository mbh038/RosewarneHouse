mypath="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
cat(mypath,"grset")
cat(mypath,"/grset",sep="")
path="C:/temp/RSpace/PH525rawdata"
#mypath="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
load(cat(path,"/grset",sep=""))
load(paste(path,"/grset",sep=""))
path="C:/temp/RSpace/PH525rawdata"
load(paste(path,"/grset",sep=""))
path="C:/users/Mike/RSpace/PH525rawdata"
#mypath="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
load(paste(path,"/grset",sep=""))
paste(path,"/grset",sep="")
path="C:/Users/Mike/RSpace/PH525rawdata"
#mypath="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
load(paste(path,"/grset",sep=""))
load("C:/users/Mike/RSpace/PH525rawdata/grset")
path="C:/Users/Mike/RSpace/PH525rawdata"
#mypath="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
load(paste(path,"/grset.rda",sep=""))
library(minfi)
class(grset)
pData(grset)
names(pData(grset))
names(pData(grset))
pData(grset)$pData(grset)
pData(grset)$characteristics_ch1.1
pData(grset)[1,]
pData(grset)[1,"characteristics_ch1.1"]
age=pData(grset)$characteristics_ch1.1
age=as.character(age)
age[grep("N/A",age)] = NA
age=as.numeric(gsub("age \\(y\\):\ ","",age))
group = rep("normal",nrow(pData(grset)))
group[grepl("ulcerative",pData(grset)[,1])]="ulcerative"
group[grepl("Crohn",pData(grset)[,1])]="crohn"
group = factor(group,levels=c("normal","ulcerative","crohn"))
keep = which(rowSums(is.na(getBeta(grset)))==0 &
!seqnames(grset)%in%c("chrX","chrY"))
##create a new object
grset2=grset[keep,]
grset2
d <- dist(t(grset2))
mds <- cmdscale(d)
mypar()
plot(mds[,1],mds[,2],bg=as.numeric(group),pch=21,
xlab="First dimension",ylab="Second dimension")
legend("bottomleft",levels(group),col=seq(along=levels(group)),pch=15)
d <- dist(t(grset2))
names(pData(grset))
dim(pData(grset))
dim(grset2)
str(grset2)
summary(grset2)
grset2[1,]
grset2[1,1]
assays(grset2)[1,]
assays(grset2)[[1]]
assays(grset2)[[1]][1,]
summary(assays(grset2))
str(assays(grset2))
d <- dist(t(assay(grset2))
d <- dist(t(assays(grset2)))
d <- dist(t(as.matrix(assays(grset2))))
class(assays(grset2))
class(grset)
s<-getbeta(grset2)
s<-getBeta(grset2)
rm(s)
d <- dist(t(getBeta(grset2))
)
mds <- cmdscale(d)
mypar()
plot(mds[,1],mds[,2],bg=as.numeric(group),pch=21,
library(rafalib)
library(rafalib)
mypar()
plot(mds[,1],mds[,2],bg=as.numeric(group),pch=21,
plot(mds[,1],mds[,2],bg=as.numeric(group),pch=21,xlab="First dimension",ylab="Second dimension")
legend("bottomleft",levels(group),col=seq(along=levels(group)),pch=as.numeric(group))
library(rafalib)
mypar()
plot(mds[,1],mds[,2],bg=as.numeric(group),pch=as.numeric(group),xlab="First dimension",ylab="Second dimension")
legend("bottomleft",levels(group),col=seq(along=levels(group)),pch=as.numeric(group))
d <- dist(t(getBeta(grset2)))
mds <- cmdscale(d)
library(rafalib)
mypar()
plot(mds[,1],mds[,2],col=as.numeric(group),pch=as.numeric(group),xlab="First dimension",ylab="Second dimension")
legend("bottomleft",levels(group),col=seq(along=levels(group)),pch=as.numeric(group))
plot(mds[,1],mds[,2],col=age,pch=as.numeric(group),xlab="First dimension",ylab="Second dimension")
legend("bottomleft",levels(group),col=seq(along=levels(group)),pch=as.numeric(group))
summary(age)
plot(mds[,1],mds[,2],col=ifelse(age>40,1,2),pch=as.numeric(group),xlab="First dimension",ylab="Second dimension")
legend("bottomleft",levels(group),col=seq(along=levels(group)),pch=as.numeric(group))
y = getBeta(grset2)
mds = cmdscale( dist( t(y)))
mypar(1,1)
col=ifelse(age>40,1,2)
plot(mds,pch=as.numeric(group),col=col)
legend("bottomleft",levels(group),pch=seq_along(group))
165500/169500
sigma=5.67e-8
Te=255
planck_fb=4*sigma*Te^3
planck_fb
setwd("C:/Users/Mike/Rspace/RosewarneHouse")
source('C:/Users/Mike/Rspace/RosewarneHouse/RHBayes.r', echo=TRUE)
Qexp<-u1$hp2flux2[index]
Tint<-u1$T4[index]
Text<-u1$T2[index]
source('C:/Users/Mike/Rspace/RosewarneHouse/RHBayes.r', echo=TRUE)
lines(Qexp,col="blue")
Qexp<-u1$hp2flux2[index]
Tint<-u1$T4[index]
Text<-u1$T2[index]
Tm=numeric()
Q=numeric()
R1=0.2
R2=0.6
C=200000
Tm[1]=12
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=0.6
R2=0.6
C=200000
Tm[1]=12
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=0.4
R2=0.6
C=200000
Tm[1]=12
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=0.8
R2=0.6
C=200000
Tm[1]=12
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=0.3
R2=0.6
C=200000
Tm[1]=12
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
Tm=numeric()
Q=numeric()
R1=0.3
R2=0.6
C=200000
Tm[1]=15
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=0.6
R2=1
C=200000
Tm[1]=15
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=0.6
R2=1
C=400000
Tm[1]=15
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=1
R2=1
C=400000
Tm[1]=12
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=1
R2=1
C=400000
Tm[1]=10
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=.1
R2=.1
C=400000
Tm[1]=10
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
R1=2
R2=1
C=400000
Tm[1]=10
tau=60
for (i in 1:(sum(index)-1)){
Q[i]=(Tint[i]-Tm[i])/R1
Tm[i+1]=((Tint[i+1]/R1)+(Text[i+1]/R2)+C*Tm[i]/tau)/(1/R1 + 1/R2 + C/tau)
}
plot(Q,type="l")
lines(Qexp,col="blue")
plot(Qexp,Q,type="l")
length(Qexp)
length(Q)
plot(Qexp[1:length(Q)],Q,type="l")
abline(0,1)
U<-numeric()
for (i in 1:sum(index)){
Tintave=cumsum(Tint[i])
Textave=cumsum(Text[i])
Qave=cumsum(Qexp(i))
U[i]=Qave/(Textave-Tintave)
}
plot(U,type="l")
U<-numeric()
for (i in 1:sum(index)){
Tintave=cumsum(Tint[i])
Textave=cumsum(Text[i])
Qave=cumsum(Qexp[i])
U[i]=Qave/(Textave-Tintave)
}
plot(U,type="l")
median(U)
U<-numeric()
for (i in 1:sum(index)){
Tintave=cumsum(Tint[i])
Textave=cumsum(Text[i])
Qave=cumsum(Qexp[i])
U[i]=Qave/(Textave-Tintave)
}
plot(U,type="l",ylim=c(-10,10))
plot(Tintave)
